{:xiana/postgresql      {:port     5433
                         :dbname   "{{name-to-path}}"
                         :host     "localhost"
                         :dbtype   "postgresql"
                         :user     "postgres"
                         :password "postgres"}
 :xiana/migration       {:store                :database
                         :migration-dir        ["migrations/common"
                                                "migrations/dev"]
                         :migration-table-name "migrations"}
 :xiana/swagger         {:uri-path "swagger/swagger.json"
                         :path :swagger.json
                         :data {:coercion (reitit.coercion.malli/create
                                           {:error-keys #{:coercion :in :schema :value :errors :humanized}
                                            :compile malli.util/closed-schema
                                            :strip-extra-keys true
                                            :default-values true
                                            :options nil})
                                :middleware [reitit.swagger/swagger-feature]}}
 :xiana/swagger-ui      {:uri-path "swagger/swagger-ui"}
 :xiana/session-backend {:storage            :database
                         :session-table-name :sessions}
 :xiana/web-server      {:port   3000
                         :host   "localhost"
                         :join?  false
                         :async? true}
 :xiana/auth            {:hash-algorithm  :bcrypt           ;; Available values: :bcrypt, :scrypt, and :pbkdf2
                         :bcrypt-settings {:work-factor 11}
                         :scrypt-settings {:cpu-cost        32768 ;; Must be a power of 2
                                           :memory-cost     8
                                           :parallelization 1}
                         :pbkdf2-settings {:type       :sha1 ;; Available values: :sha1 and :sha256
                                           :iterations 100000}}
 :logging/timbre-config {:min-level :debug}
 :logging/rolling       {:enabled?  true
                         :path      "log/{{name-to-path}}.log"
                         :roll-freq :daily                  ; accepts :daily :weekly :monthly
                         :min-level :debug}}
